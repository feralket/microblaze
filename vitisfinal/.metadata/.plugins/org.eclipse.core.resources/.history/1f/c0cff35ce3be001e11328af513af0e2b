/*
 *
 * Xilinx, Inc.
 * XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION "AS IS" AS A
 * COURTESY TO YOU.  BY PROVIDING THIS DESIGN, CODE, OR INFORMATION AS
 * ONE POSSIBLE   IMPLEMENTATION OF THIS FEATURE, APPLICATION OR
 * STANDARD, XILINX IS MAKING NO REPRESENTATION THAT THIS IMPLEMENTATION
 * IS FREE FROM ANY CLAIMS OF INFRINGEMENT, AND YOU ARE RESPONSIBLE
 * FOR OBTAINING ANY RIGHTS YOU MAY REQUIRE FOR YOUR IMPLEMENTATION
 * XILINX EXPRESSLY DISCLAIMS ANY WARRANTY WHATSOEVER WITH RESPECT TO
 * THE ADEQUACY OF THE IMPLEMENTATION, INCLUDING BUT NOT LIMITED TO
 * ANY WARRANTIES OR REPRESENTATIONS THAT THIS IMPLEMENTATION IS FREE
 * FROM CLAIMS OF INFRINGEMENT, IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.
 */

/*
 *
 *
 * This file is a generated sample test application.
 *
 * This application is intended to test and/or illustrate some
 * functionality of your system.  The contents of this file may
 * vary depending on the IP in your system and may use existing
 * IP driver functions.  These drivers will be generated in your
 * SDK application project when you run the "Generate Libraries" menu item.
 *
 */

#include <stdio.h>
#include "xparameters.h"
#include "xil_cache.h"
#include "xtmrctr.h"
#include "tmrctr_header.h"




while(1)
int main ()
{
   Xil_ICacheEnable();
   Xil_DCacheEnable();
   print("---Entering main---\n\r");

   {
      int status;

      print("\r\n Running TmrCtrSelfTestExample() for axi_timer_0...\r\n");

      status = TmrCtrSelfTestExample(XPAR_AXI_TIMER_0_DEVICE_ID, 0x0);

      if (status == 0) {
         print("PASSED for axi_timer\r\n");
      }
      else {
         print("FAILED for axi_timer\r\n");
      }
   }

   {
      int status1;

      print("\r\n Running TmrCtrSelfTestExample() for axi_uartlite_0...\r\n");

      status1 = TmrCtrSelfTestExample(XPAR_AXI_UARTLITE_0_DEVICE_ID, 0x0);

      if (status1 == 0) {
         print("PASSED for axi_Uartlite\r\n");
      }
      else {
         print("FAILED for axi_Uartlite\r\n");
      }
   }


   {
      int status2;

      print("\r\n Running TmrCtrSelfTestExample() for dig_stopwatch...\r\n");

      status2 = TmrCtrSelfTestExample(XPAR_DIG_STOPWATCH_0_S00_AXI_BASEADDR, 0x0);

      if (status2 == 0) {
         print("PASSED for dig_stopwatch\r\n");
      }
      else {
         print("FAILED for dig_stopwatch\r\n");
      }
   }

   /*
    * Peripheral SelfTest will not be run for axi_uartlite_0
    * because it has been selected as the STDOUT device
    */



   print("---Exiting main---\n\r");
   Xil_DCacheDisable();
   Xil_ICacheDisable();
   return 0;
}
